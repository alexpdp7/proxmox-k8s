#!/bin/bash

set -ue

HOSTNAME=$1
FQDN=$2
OUTPUT=$3

ISO_URL=$(curl https://builds.coreos.fedoraproject.org/streams/stable.json | jq -r .architectures.x86_64.artifacts.metal.formats.iso.disk.location)
ISO_FILENAME=$(basename $ISO_URL)

test -f $ISO_FILENAME || wget $ISO_URL

function coreos-installer() {
    docker run -it --rm -v $(pwd):/work -w /work --pull=always -u $(id -u):$(id -g) quay.io/coreos/coreos-installer:release "$@"
}

function butane() {
    docker run -it --rm -v $(pwd):/work -w /work --pull=always -u $(id -u):$(id -g) quay.io/coreos/butane:release "$@"
}

BUTANE_PATH=$(mktemp -p .)

cat >$BUTANE_PATH <<EOF
variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - $(cat ~/.ssh/id_rsa.pub)
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: $HOSTNAME
    - path: /usr/local/bin/install_k8s
      mode: 0755
      contents:
        inline: |
          #!/bin/bash -x

          test -f /home/core/.kube/config && exit

          set -ue

          curl -sfL https://get.k3s.io | sh -

          mkdir -p /home/core/.kube/
          cp /etc/rancher/k3s/k3s.yaml /home/core/.kube/config
          chown -R core:core /home/core/.kube/
          sed -i "s=server: https://127.0.0.1:6443=server: https://$FQDN:6443=" /home/core/.kube/config
systemd:
  units:
    - name: install_k8s.service
      enabled: true
      contents: |
        [Unit]
        Description=Installs k8s
        After=network-online.target
        Wants=network-online.target
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/local/bin/install_k8s
        [Install]
        WantedBy=multi-user.target
EOF

IGNITION_PATH=$(mktemp -p .)

butane $BUTANE_PATH >$IGNITION_PATH

coreos-installer iso customize $ISO_FILENAME --dest-device=/dev/sda --dest-ignition=$IGNITION_PATH -o $OUTPUT

rm $IGNITION_PATH $BUTANE_PATH
